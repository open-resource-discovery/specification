"use strict";(self.webpackChunk_open_resource_discovery_specification=self.webpackChunk_open_resource_discovery_specification||[]).push([[5743],{1391:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"spec-extensions/access-strategies/basic-auth","title":"Basic Auth Access Strategy","description":"Generic basic auth authentication and authorization.","source":"@site/docs/spec-extensions/access-strategies/basic-auth.md","sourceDirName":"spec-extensions/access-strategies","slug":"/spec-extensions/access-strategies/basic-auth","permalink":"/specification/spec-extensions/access-strategies/basic-auth","draft":false,"unlisted":false,"editUrl":"https://github.com/open-resource-discovery/specification/tree/main/docs/spec-extensions/access-strategies/basic-auth.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Basic Auth Access Strategy","description":"Generic basic auth authentication and authorization.","sidebar_position":1},"sidebar":"specExtensionsSidebar","previous":{"title":"Open Access Strategy","permalink":"/specification/spec-extensions/access-strategies/open"},"next":{"title":"SAP OAuth Client Credentials v1","permalink":"/specification/spec-extensions/access-strategies/sap-oauth-client-credentials-v1"}}');var a=n(4848),i=n(8453);const c={title:"Basic Auth Access Strategy",description:"Generic basic auth authentication and authorization.",sidebar_position:1},r="Basic Auth Access Strategy",o={},d=[{value:"Description",id:"description",level:2},{value:"Optional Tenant HTTP Headers",id:"optional-tenant-http-headers",level:2},{value:"Local-Tenant-Id",id:"local-tenant-id",level:3},{value:"Global-Tenant-Id",id:"global-tenant-id",level:3},{value:"General Remarks",id:"general-remarks",level:3}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"basic-auth-access-strategy",children:"Basic Auth Access Strategy"})}),"\n",(0,a.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"basic-auth"})," access strategy is a generic access strategy that uses basic authentication for authentication and authorization.\nIt doesn't specify how the credentials would be exchanged."]}),"\n",(0,a.jsxs)(t.p,{children:["To send Basic Authentication with HTTP requests, you include an Authorization header with your request.\nThe header value is the word ",(0,a.jsx)(t.code,{children:"Basic"}),", followed by a space, then a Base64-encoded string of ",(0,a.jsx)(t.code,{children:"username:password"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"accessStrategy"}),".",(0,a.jsx)(t.code,{children:"type"})," value for it is: ",(0,a.jsx)(t.code,{children:"basic-auth"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"optional-tenant-http-headers",children:"Optional Tenant HTTP Headers"}),"\n",(0,a.jsx)(t.p,{children:"It may be necessary to indicate which tenant the information are requested for.\nThis becomes necessary when the ORD Provider is multi-tenant and the metadata it provides is different across those tenants (system instance aware)."}),"\n",(0,a.jsx)(t.p,{children:"The HTTP headers are optional and will only be sent by the ORD Aggregator if they are applicable and known by it."}),"\n",(0,a.jsx)(t.p,{children:"If the ORD Provider has metadata that is different per tenant and it understands the provided tenant IDs, it MUST return the ORD related information and metadata for the chosen tenant."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["\u2139 Please note that according to ",(0,a.jsx)(t.a,{href:"https://www.rfc-editor.org/rfc/rfc7230#section-3.2",children:"RFC 7230 Section 3.2"})," HTTP headers are case insensitive."]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"local-tenant-id",children:"Local-Tenant-Id"}),"\n",(0,a.jsxs)(t.p,{children:["The local tenant ID is the ID that the system instance itself created and uses to identify its tenants.\nIt is passed along as a ",(0,a.jsx)(t.code,{children:"Local-Tenant-Id"})," header."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-http",children:"GET /.well-known/open-resource-discovery/document/1\nContent-Type: application/json\nLocal-Tenant-Id: 000023\n"})}),"\n",(0,a.jsx)(t.h3,{id:"global-tenant-id",children:"Global-Tenant-Id"}),"\n",(0,a.jsxs)(t.p,{children:["The global tenant ID is a globally unique ID for a system instance (tenant). The scope of uniqueness is within the connected aggregator.\nIt is passed along as a ",(0,a.jsx)(t.code,{children:"Global-Tenant-Id"})," header."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-http",children:"GET /.well-known/open-resource-discovery/document/1\nContent-Type: application/json\nGlobal-Tenant-Id: c6c80b52-ecc1-47f8-9303-0d55fb67fd41\n"})}),"\n",(0,a.jsx)(t.h3,{id:"general-remarks",children:"General Remarks"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["\u2139 If the metadata is not different across tenants (system instance unaware), the response is static and the same across tenants.\nIn this case, this should be indicated via ",(0,a.jsx)(t.code,{children:"systemInstanceAware"}),": ",(0,a.jsx)(t.code,{children:"false"})," to avoid unnecessary requests for each tenant."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>r});var s=n(6540);const a={},i=s.createContext(a);function c(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);